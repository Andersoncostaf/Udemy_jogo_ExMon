--> explicando o jogo

 Jogo baseado em turnos onde teremos um player contra o
computador
● Humano e computador começam com 100 pontos de vida
● A cada rodada, cada um pode fazer um dos 3 movimentos:
○ Ataque moderado que dá entre (18-25) de dano
○ Ataque variado que dá entre (10-35) de dano
○ Poder de cura, curando entre (18-25) de vida
○ A cada movimento, deve ser exibido na tela o que aconteceu e a
situação de cada jogador
● Se o jogador ou o computador ficarem com 0 de vida, o jogo acaba
○ Se alguém perder, ao exibir o resultado final, não deve ser
exibido que algum jogador ficou com vida negativa
● O jogador humano poderá escolher o nome do seu personagem,
assim como o nome de seus 3 movimentos

--> Totipico de estudo recomendado

xxxxMaps
○ https://hexdocs.pm/elixir/Map.html
xxxxStructs
○ https://elixir-lang.org/getting-started/structs.html
xxxxAgent
○ https://hexdocs.pm/elixir/Agent.html

--> Jogador
Movimentos:
○ moderador, variado e cura
● 100 pontos de vida
● Nome

-->> Como vamos armazenar os estados ?

Precisamos armazenar o estado do jogo
○ de quem é a vez
● o Jogo começou, está acontecendo ou terminou ?
● quais são os jogadores e qual o estado de cada um ?

Explicação do jogo

● Um mapa em memória armazenará nosso estado e acada rodada atualizaremos esse mapa

%{
  computer: computer,
  player: player, 
  turn: :player, #ou :computer
  status: :started # ou :continue, :game_over
}
